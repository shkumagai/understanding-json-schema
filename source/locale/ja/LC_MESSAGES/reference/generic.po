# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2013-2017, Michael Droettboom, Space Telescope Science
# Institute
# This file is distributed under the same license as the Understanding JSON
# Schema package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2017.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Understanding JSON Schema 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-02-27 15:43+0900\n"
"PO-Revision-Date: 2017-03-07 17:54+0900\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.3.4\n"

#: ../../source/reference/generic.rst:2
msgid "Generic keywords"
msgstr "汎用キーワード"

#: ../../source/reference/generic.rst:4
msgid ""
"This chapter lists some miscellaneous properties that are available for "
"all JSON types."
msgstr "この章では、すべてのJSON型で使えるその他のプロパティをいくつか示します。"

#: ../../source/reference/generic.rst:15
msgid "Metadata"
msgstr "メタデータ"

#: ../../source/reference/generic.rst:17
msgid ""
"JSON Schema includes a few keywords, ``title``, ``description`` and "
"``default``, that aren't strictly used for validation, but are used to "
"describe parts of a schema."
msgstr "JSONスキーマには検証に厳密には使われないもののスキーマの一部を記述するために使われる、``title``, ``description`` と ``default`` というキーワードが含まれています。"

#: ../../source/reference/generic.rst:21
msgid ""
"The ``title`` and ``description`` keywords must be strings.  A \"title\" "
"will preferably be short, whereas a \"description\" will provide a more "
"lengthy explanation about the purpose of the data described by the "
"schema.  Neither are required, but they are encouraged for good practice."
msgstr "``title`` と``description`` キーワードは文字列でなければなりません。\"title\" は短いことが好ましい一方、\"description\"はスキーマによって記述されるデータの目的についてより長い説明を提供します。どちらも必須ではありませんが、良い慣習として奨励されています。"

#: ../../source/reference/generic.rst:27
msgid ""
"The ``default`` keyword specifies a default value for an item.  JSON "
"processing tools may use this information to provide a default value for "
"a missing key/value pair, though many JSON schema validators simply "
"ignore the ``default`` keyword.  It should validate against the schema in"
" which it resides, but that isn't required."
msgstr "``default`` キーワードは項目のデフォルト値を指定します。JSON処理ツールはこの情報を利用して欠けたキー/値ペアのデフォルト値を提供できますが、多くのJSONスキーマバリデータは単純に ``default`` キーワードを無視します。 ``default`` キーワードが存在するスキーマに対する検証はすべきですが、必須ではありません。"

#: ../../source/reference/generic.rst:47
msgid "Enumerated values"
msgstr "列挙値"

#: ../../source/reference/generic.rst:49
msgid ""
"The ``enum`` keyword is used to restrict a value to a fixed set of "
"values.  It must be an array with at least one element, where each "
"element is unique."
msgstr "``enum`` キーワードは値を決まった値のセットに制限するために使われます。少なくとも一つの要素を持つ配列で、各要素がユニークでなければなりません。"

#: ../../source/reference/generic.rst:53
msgid "The following is an example for validating street light colors:"
msgstr "街灯の色を検証する例を次に示します:"

#: ../../source/reference/generic.rst:65
msgid ""
"You can use ``enum`` even without a type, to accept values of different "
"types.  Let's extend the example to use ``null`` to indicate \"off\", and"
" also add 42, just for fun."
msgstr "``enum`` は異なる型の値を受け入れるために、型を指定しないでも使えます。お遊びで、 ``null`` を使って\"off\"を表す例を拡張し、42も加えてみましょう。"

#: ../../source/reference/generic.rst:82
msgid ""
"However, in most cases, the elements in the ``enum`` array should also be"
" valid against the enclosing schema:"
msgstr "ただしほとんどの場合、 ``enum`` 配列の中の要素も囲まれているスキーマに対して有効であるべきです:"

#: ../../source/reference/generic.rst:85
msgid ""
"This is in the enum, but it's invalid against { \"type\": \"string\" }, "
"so it's ultimately invalid:"
msgstr "これは ``enum`` ですが、 ``{ \"type\": \"string\" }`` に対して無効なので、最終的には無効です:"

